/*
 * DevNest Portal API (OpenAPI 3.0)
 *
 * The DevNest Portal API endpoints definitions based on the OpenAPI 3.0 specification.
 *
 * API version: 1.0.0
 * Contact: contact@devnest.ro
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/api/v1/",
		Index,
	},

	Route{
		"CreateAllocationForEmployee",
		strings.ToUpper("Post"),
		"/api/v1/employees/{employeeId}/allocations",
		CreateAllocationForEmployee,
	},

	Route{
		"CreateAllocations",
		strings.ToUpper("Post"),
		"/api/v1/projects/{projectId}/allocations",
		CreateAllocations,
	},

	Route{
		"DeleteAllocationForEmployee",
		strings.ToUpper("Delete"),
		"/api/v1/employees/{employeeId}/allocations/{allocationId}",
		DeleteAllocationForEmployee,
	},

	Route{
		"GetAllAllocationsById",
		strings.ToUpper("Get"),
		"/api/v1/projects/{projectId}/allocations",
		GetAllAllocationsById,
	},

	Route{
		"GetAllocationForEmployee",
		strings.ToUpper("Get"),
		"/api/v1/employees/{employeeId}/allocations/{allocationId}",
		GetAllocationForEmployee,
	},

	Route{
		"GetAllocationsForEmployee",
		strings.ToUpper("Get"),
		"/api/v1/employees/{employeeId}/allocations",
		GetAllocationsForEmployee,
	},

	Route{
		"ProjectsProjectIdAllocationsAllocationIdDelete",
		strings.ToUpper("Delete"),
		"/api/v1/projects/{projectId}/allocations/{allocationId}",
		ProjectsProjectIdAllocationsAllocationIdDelete,
	},

	Route{
		"UpdateAllocation",
		strings.ToUpper("Put"),
		"/api/v1/projects/{projectId}/allocations/{employeeId}",
		UpdateAllocation,
	},

	Route{
		"UpdateAllocationForEmployee",
		strings.ToUpper("Put"),
		"/api/v1/employees/{employeeId}/allocations/{allocationId}",
		UpdateAllocationForEmployee,
	},

	Route{
		"UpdateAllocations",
		strings.ToUpper("Put"),
		"/api/v1/projects/{projectId}/allocations",
		UpdateAllocations,
	},

	Route{
		"GetAllArchivedEmployees",
		strings.ToUpper("Get"),
		"/api/v1/archives/employees",
		GetAllArchivedEmployees,
	},

	Route{
		"GetAllArchivedProjects",
		strings.ToUpper("Get"),
		"/api/v1/archives/projects",
		GetAllArchivedProjects,
	},

	Route{
		"DeleteEmployeeById",
		strings.ToUpper("Delete"),
		"/api/v1/employees/{employeeId}",
		DeleteEmployeeById,
	},

	Route{
		"EmployeesEmployeeIdPasswordPut",
		strings.ToUpper("Put"),
		"/api/v1/employees/{employeeId}/password",
		EmployeesEmployeeIdPasswordPut,
	},

	Route{
		"EmployeesEmployeeIdPatch",
		strings.ToUpper("Patch"),
		"/api/v1/employees/{employeeId}",
		EmployeesEmployeeIdPatch,
	},

	Route{
		"EmployeesEmployeeIdPut",
		strings.ToUpper("Put"),
		"/api/v1/employees/{employeeId}",
		EmployeesEmployeeIdPut,
	},

	Route{
		"EmployeesPost",
		strings.ToUpper("Post"),
		"/api/v1/employees",
		EmployeesPost,
	},

	Route{
		"GetAllEmployees",
		strings.ToUpper("Get"),
		"/api/v1/employees",
		GetAllEmployees,
	},

	Route{
		"GetEmployeeById",
		strings.ToUpper("Get"),
		"/api/v1/employees/{employeeId}",
		GetEmployeeById,
	},

	Route{
		"GetHistoryForEmployee",
		strings.ToUpper("Get"),
		"/api/v1/employees/{employeeId}/history",
		GetHistoryForEmployee,
	},

	Route{
		"FeedbackEmployeeIdMonthPost",
		strings.ToUpper("Post"),
		"/api/v1/feedback/{employeeId}/month",
		FeedbackEmployeeIdMonthPost,
	},

	Route{
		"GetAllFeedback",
		strings.ToUpper("Get"),
		"/api/v1/feedback",
		GetAllFeedback,
	},

	Route{
		"GetEmployeeFeedback",
		strings.ToUpper("Get"),
		"/api/v1/feedback/{employeeId}/month/{feedbackId}",
		GetEmployeeFeedback,
	},

	Route{
		"GetEmployeeMonthlyFeedback",
		strings.ToUpper("Get"),
		"/api/v1/feedback/{employeeId}/month",
		GetEmployeeMonthlyFeedback,
	},

	Route{
		"GetEmployeeOverallFeedback",
		strings.ToUpper("Get"),
		"/api/v1/feedback/{employeeId}",
		GetEmployeeOverallFeedback,
	},

	Route{
		"CreateProject",
		strings.ToUpper("Post"),
		"/api/v1/projects",
		CreateProject,
	},

	Route{
		"GetAllProjects",
		strings.ToUpper("Get"),
		"/api/v1/projects",
		GetAllProjects,
	},

	Route{
		"GetHistoryForProject",
		strings.ToUpper("Get"),
		"/api/v1/projects/{projectId}/history",
		GetHistoryForProject,
	},

	Route{
		"ProjectsProjectIdDelete",
		strings.ToUpper("Delete"),
		"/api/v1/projects/{projectId}",
		ProjectsProjectIdDelete,
	},

	Route{
		"ProjectsProjectIdGet",
		strings.ToUpper("Get"),
		"/api/v1/projects/{projectId}",
		ProjectsProjectIdGet,
	},

	Route{
		"ProjectsProjectIdPatch",
		strings.ToUpper("Patch"),
		"/api/v1/projects/{projectId}",
		ProjectsProjectIdPatch,
	},

	Route{
		"ProjectsProjectIdPut",
		strings.ToUpper("Put"),
		"/api/v1/projects/{projectId}",
		ProjectsProjectIdPut,
	},

	Route{
		"GetAllSettings",
		strings.ToUpper("Get"),
		"/api/v1/settings",
		GetAllSettings,
	},

	Route{
		"UpdateSettings",
		strings.ToUpper("Put"),
		"/api/v1/settings",
		UpdateSettings,
	},

	Route{
		"GetAllTimesheets",
		strings.ToUpper("Get"),
		"/api/v1/timesheets",
		GetAllTimesheets,
	},

	Route{
		"GetProjectStatusByProjectId",
		strings.ToUpper("Get"),
		"/api/v1/timesheets/project-status/{projectId}",
		GetProjectStatusByProjectId,
	},

	Route{
		"GetTimesheetById",
		strings.ToUpper("Get"),
		"/api/v1/timesheets/{timesheetId}",
		GetTimesheetById,
	},

	Route{
		"MonthlyTimesheetEmployeeIdPut",
		strings.ToUpper("Put"),
		"/api/v1/monthlyTimesheet/{employeeId}",
		MonthlyTimesheetEmployeeIdPut,
	},

	Route{
		"TimesheetsProjectStatusProjectIdYearMonthGet",
		strings.ToUpper("Get"),
		"/api/v1/timesheets/project-status/{projectId}/{year}/{month}",
		TimesheetsProjectStatusProjectIdYearMonthGet,
	},

	Route{
		"TimesheetsTimesheetIdPut",
		strings.ToUpper("Put"),
		"/api/v1/timesheets/{timesheetId}",
		TimesheetsTimesheetIdPut,
	},
}
